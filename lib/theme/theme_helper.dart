import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.blueGray700,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.blueGray700,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray60001,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 14.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray60003,
          fontSize: 9.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 32.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        headlineSmall: TextStyle(
          color: appTheme.blueGray700,
          fontSize: 24.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 11.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        labelSmall: TextStyle(
          color: appTheme.blueGray700,
          fontSize: 8.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 20.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 16.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 15.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0X3F000000),
    primaryContainer: Color(0X000C154A),
    secondaryContainer: Color(0XFFFA3C07),

    // Error colors
    errorContainer: Color(0XFF6BA5A5),
    onError: Color(0XFFEEEEEE),

    // On colors(text colors)
    onPrimary: Color(0XFF152B68),
    onPrimaryContainer: Color(0XFF9D9292),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber100 => Color(0XFFFFF2AF);
  Color get amber10001 => Color(0XFFFFECA8);
  Color get amber200 => Color(0XFFFFDD99);
  Color get amber20001 => Color(0XFFFFE294);
  Color get amber300 => Color(0XFFFED863);
  Color get amber400 => Color(0XFFFEC325);
  Color get amber500 => Color(0XFFF2BE06);
  Color get amber600 => Color(0XFFFFB700);
  Color get amber60001 => Color(0XFFFCB900);
  Color get amberA400 => Color(0XFFFFC600);

  // Blue
  Color get blue100 => Color(0XFFD0DFFE);
  Color get blue10001 => Color(0XFFB1CBFF);
  Color get blue50 => Color(0XFFD5E3FF);
  Color get blue5001 => Color(0XFFD4E3FF);
  Color get blue600 => Color(0XFF3B96D2);
  Color get blue900 => Color(0XFF1352B0);
  Color get blueA100 => Color(0XFF78A5FF);
  Color get blueA10001 => Color(0XFF7BAFFF);
  Color get blueA200 => Color(0XFF3F8CFF);
  Color get blueA400 => Color(0XFF3D73FF);
  Color get blueA700 => Color(0XFF0065FF);

  // BlueGray
  Color get blueGray100 => Color(0XFFD6D6D6);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray10002 => Color(0XFFD7D7D7);
  Color get blueGray10003 => Color(0XFFCFCFCF);
  Color get blueGray400 => Color(0XFF8C8C8C);
  Color get blueGray50 => Color(0XFFEAF7F7);
  Color get blueGray5001 => Color(0XFFEBEFF0);
  Color get blueGray600 => Color(0XFF548579);
  Color get blueGray60001 => Color(0XFF418186);
  Color get blueGray700 => Color(0XFF306064);
  Color get blueGray900 => Color(0XFF373737);
  Color get blueGray90001 => Color(0XFF342145);

  // DeepOrange
  Color get deepOrange400 => Color(0XFFDD823C);
  Color get deepOrange800 => Color(0XFFC56229);
  Color get deepOrange900 => Color(0XFFB45F1D);
  Color get deepOrange90001 => Color(0XFFA34E00);
  Color get deepOrange90002 => Color(0XFFAF5912);
  Color get deepOrangeA200 => Color(0XFFFF7B35);
  Color get deepOrangeA700 => Color(0XFFDD1616);

  // DeepPurple
  Color get deepPurple600 => Color(0XFF584FA5);
  Color get deepPurple700 => Color(0XFF531CB4);
  Color get deepPurple70001 => Color(0XFF521BB3);
  Color get deepPurple900 => Color(0XFF3D228A);
  Color get deepPurpleA200 => Color(0XFF7266F9);

  // Gray
  Color get gray100 => Color(0XFFF4F4F4);
  Color get gray10001 => Color(0XFFF0F5FF);
  Color get gray300 => Color(0XFFDFDFDF);
  Color get gray30001 => Color(0XFFE5E5E5);
  Color get gray30002 => Color(0XFFDCDCDC);
  Color get gray400 => Color(0XFFBFBFBF);
  Color get gray40000 => Color(0X00C5C5C5);
  Color get gray40001 => Color(0XFFC0C0C0);
  Color get gray40002 => Color(0XFFC1C1C1);
  Color get gray40003 => Color(0XFFC6C6C6);
  Color get gray40004 => Color(0XFFB2B2B2);
  Color get gray40005 => Color(0XFFC4C4C4);
  Color get gray40093 => Color(0X93C7BDBD);
  Color get gray50 => Color(0XFFF9FAFF);
  Color get gray500 => Color(0XFF9AA091);
  Color get gray50001 => Color(0XFF909090);
  Color get gray50002 => Color(0XFF9E9E9E);
  Color get gray50003 => Color(0XFF9D9595);
  Color get gray50004 => Color(0XFFAA9E9E);
  Color get gray50005 => Color(0XFF9D9696);
  Color get gray5001 => Color(0XFFF8F8F8);
  Color get gray600 => Color(0XFF7B7B7B);
  Color get gray60001 => Color(0XFF737373);
  Color get gray60002 => Color(0XFF7E7E7E);
  Color get gray60003 => Color(0XFF7F7F7F);
  Color get gray70000 => Color(0X00555555);
  Color get gray800 => Color(0XFF65341A);
  Color get gray80001 => Color(0XFF6E2D0F);
  Color get gray80002 => Color(0XFF444444);
  Color get gray80003 => Color(0XFF454444);
  Color get gray900 => Color(0XFF61240C);

  // Grayc
  Color get gray8008c => Color(0X8C393939);

  // Indigo
  Color get indigo100 => Color(0XFFCBCBF3);
  Color get indigo300 => Color(0XFF6891C2);
  Color get indigo50 => Color(0XFFDFE7F2);
  Color get indigo500 => Color(0XFF366EC1);
  Color get indigo800 => Color(0XFF285680);
  Color get indigo80028 => Color(0X28274C77);
  Color get indigo80062 => Color(0X622C3885);
  Color get indigoA200 => Color(0XFF5F71E3);

  // LightGreen
  Color get lightGreen100 => Color(0XFFD5FAD3);
  Color get lightGreen200 => Color(0XFFDFC99D);
  Color get lightGreen400 => Color(0XFF9BBA74);
  Color get lightGreen40001 => Color(0XFF91D85C);
  Color get lightGreen40002 => Color(0XFFB1D455);
  Color get lightGreen50 => Color(0XFFEFF2E5);

  // Lime
  Color get lime300 => Color(0XFFC8E27D);
  Color get lime600 => Color(0XFFB1D430);
  Color get lime900 => Color(0XFF8D4D29);

  // Oranged
  Color get orange2009d => Color(0X9DEFC97E);

  // Orange
  Color get orange300 => Color(0XFFFEBE49);
  Color get orange50 => Color(0XFFFFF5D2);
  Color get orange500 => Color(0XFFFF9900);
  Color get orange700 => Color(0XFFD48500);
  Color get orange70001 => Color(0XFFE97E03);
  Color get orange800 => Color(0XFFE77302);
  Color get orangeA100 => Color(0XFFFFCF89);
  Color get orangeA200 => Color(0XFFFFB03B);

  // Pink
  Color get pinkA400 => Color(0XFFF9045B);

  // Purple
  Color get purpleA400 => Color(0XFFE307CB);

  // Red
  Color get red600 => Color(0XFFEC3C3C);
  Color get red900 => Color(0XFF743110);
  Color get redA200 => Color(0XFFFF6161);

  // Teal
  Color get teal300 => Color(0XFF71B8A7);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow200 => Color(0XFFFEE894);
  Color get yellow50 => Color(0XFFFFF9EE);
  Color get yellow700 => Color(0XFFFFC739);
  Color get yellow70001 => Color(0XFFFEC731);
  Color get yellow900 => Color(0XFFE9882D);
  Color get yellow90001 => Color(0XFFCC7022);
  Color get yellowA100 => Color(0XFFFFFA91);
  Color get yellowA200 => Color(0XFFF9FF00);
  Color get yellowA400 => Color(0XFFFFE508);
  Color get yellowA700 => Color(0XFFFFD600);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
