import '../donation_history_daily_page/widgets/userprofile1_item_widget.dart';import '../donation_history_daily_page/widgets/userprofile_item_widget.dart';import 'package:flutter/material.dart';import 'package:goseedme/core/app_export.dart';import 'package:goseedme/presentation/donation_history_daily_ext_bottomsheet/donation_history_daily_ext_bottomsheet.dart';class DonationHistoryDailyPage extends StatefulWidget {const DonationHistoryDailyPage({Key? key}) : super(key: key);

@override DonationHistoryDailyPageState createState() =>  DonationHistoryDailyPageState();

 }
class DonationHistoryDailyPageState extends State<DonationHistoryDailyPage> with  AutomaticKeepAliveClientMixin<DonationHistoryDailyPage> {@override bool get wantKeepAlive =>  true;

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(body: Container(width: double.maxFinite, decoration: AppDecoration.fillWhiteA, child: Column(children: [SizedBox(height: 20.v), SizedBox(height: 314.v, width: double.maxFinite, child: Stack(alignment: Alignment.topCenter, children: [Align(alignment: Alignment.topLeft, child: Container(height: 18.v, width: 41.h, margin: EdgeInsets.only(left: 27.h, top: 21.v), child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.center, child: Text("Recent", textAlign: TextAlign.center, style: theme.textTheme.labelLarge)), Align(alignment: Alignment.center, child: SizedBox(height: 18.v, width: 41.h, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.center, child: Text("Recent", textAlign: TextAlign.center, style: theme.textTheme.labelLarge)), Align(alignment: Alignment.center, child: Text("Recent", textAlign: TextAlign.center, style: theme.textTheme.labelLarge))])))]))), Align(alignment: Alignment.topCenter, child: Container(height: 4.v, width: 46.h, margin: EdgeInsets.only(top: 9.v), decoration: BoxDecoration(color: appTheme.blueGray10001, borderRadius: BorderRadius.circular(2.h)))), Align(alignment: Alignment.center, child: Container(height: 308.v, width: double.maxFinite, decoration: BoxDecoration(color: appTheme.blueGray50, borderRadius: BorderRadius.circular(30.h)))), Align(alignment: Alignment.center, child: SizedBox(height: 313.v, width: double.maxFinite, child: Stack(alignment: Alignment.bottomCenter, children: [Align(alignment: Alignment.center, child: Container(padding: EdgeInsets.symmetric(horizontal: 18.h, vertical: 6.v), decoration: AppDecoration.fillBluegray50.copyWith(borderRadius: BorderRadiusStyle.roundedBorder30), child: Column(mainAxisSize: MainAxisSize.min, children: [GestureDetector(onTap: () {onTapView(context);}, child: Container(height: 4.v, width: 46.h, decoration: BoxDecoration(color: appTheme.blueGray10001, borderRadius: BorderRadius.circular(2.h)))), SizedBox(height: 11.v), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 9.h), child: Text("Recent", textAlign: TextAlign.center, style: theme.textTheme.labelLarge))), SizedBox(height: 10.v), Padding(padding: EdgeInsets.only(left: 8.h), child: ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: 15.v);}, itemCount: 3, itemBuilder: (context, index) {return UserprofileItemWidget();})), SizedBox(height: 45.v)]))), CustomImageView(imagePath: ImageConstant.imgGroup9099, height: 74.v, width: 360.h, alignment: Alignment.bottomCenter), CustomImageView(imagePath: ImageConstant.imgImage29, height: 42.v, width: 22.h, alignment: Alignment.bottomLeft, margin: EdgeInsets.only(left: 47.h, bottom: 68.v))]))), Align(alignment: Alignment.bottomCenter, child: Padding(padding: EdgeInsets.only(top: 50.v), child: ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: 1.v);}, itemCount: 16, itemBuilder: (context, index) {return Userprofile1ItemWidget();})))]))])))); } 

/// Shows a modal bottom sheet with [DonationHistoryDailyExtBottomsheet] 
/// widget content.
/// The sheet is displayed on top of the current view with scrolling enabled if 
/// content exceeds viewport height.
onTapView(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>DonationHistoryDailyExtBottomsheet(),isScrollControlled: true); } 
 }
